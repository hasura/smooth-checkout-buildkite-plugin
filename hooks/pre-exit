#!/usr/bin/env bash

set -eo pipefail

if [[ "$BUILDKITE_PLUGIN_SMOOTH_CHECKOUT_SKIP_CHECKOUT" == "true" \
    || "$BUILDKITE_PLUGIN_SMOOTH_CHECKOUT_DELETE_CHECKOUT" != "true" ]]; then
  exit 0
fi

echo "Removing checkout directory: $BUILDKITE_BUILD_CHECKOUT_PATH"
# redirecting rm's stderr to /dev/null
# because it would pollute the logs if there were a lot of files inside the folder to be removed.
# Example: `node_modules` folder created by a different user in a container during a build throwing
# permission error for each of the files inside it.
# rm -rf "$BUILDKITE_BUILD_CHECKOUT_PATH" 2>/dev/null || {
#   echo "Tried running: rm -rf $BUILDKITE_BUILD_CHECKOUT_PATH"
#   echo "But it failed leaving the following files as residue"
#   ls -la "$BUILDKITE_BUILD_CHECKOUT_PATH"
# }

if [ -d "$BUILDKITE_BUILD_CHECKOUT_PATH" ]; then
  echo echo "Attempting to cleanup with sudo"
  sudo -n rm -rf "$BUILDKITE_BUILD_CHECKOUT_PATH" || {
    echo "Tried running: sudo -n rm -rf $BUILDKITE_BUILD_CHECKOUT_PATH"
    echo "But it failed leaving the following files as residue"
    ls -la "$BUILDKITE_BUILD_CHECKOUT_PATH"
  }
fi

if [ ! -d "$BUILDKITE_BUILD_CHECKOUT_PATH" ]; then
  echo "Cleanup completed successfully."
else
  echo "Cleanup was not successful."
fi